# Copyright 2023 The IREE Authors
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

load("//build_tools/bazel:build_defs.oss.bzl", "iree_compiler_cc_library", "iree_gentbl_cc_library", "iree_tablegen_doc", "iree_td_library")
load("//build_tools/bazel:enforce_glob.bzl", "enforce_glob")

package(
    default_visibility = ["//visibility:public"],
    features = ["layering_check"],
    licenses = ["notice"],  # Apache 2.0
)

exports_files(["IOStreamOps.td"])

iree_td_library(
    name = "td_files",
    srcs = enforce_glob(
        [
            "IOStreamBase.td",
            "IOStreamOps.td",
        ],
        include = ["*.td"],
    ),
    deps = [
        "//compiler/src/iree/compiler/Dialect/Util/IR:td_files",
        "@llvm-project//mlir:FuncTdFiles",
        "@llvm-project//mlir:OpBaseTdFiles",
    ],
)

iree_compiler_cc_library(
    name = "IR",
    srcs = [
        "IOStreamOps.cpp",
    ],
    hdrs = [
        "IOStreamOps.h",
    ],
    textual_hdrs = [
        "IOStreamOps.cpp.inc",
        "IOStreamTypes.cpp.inc",
        "IOStreamOps.h.inc",
        "IOStreamTypes.h.inc",
    ],
    deps = [
        ":IOStreamOpsGen",
        "//compiler/src/iree/compiler/Dialect/Util/IR",
        "//compiler/src/iree/compiler/Dialect/VM/IR",
        "@llvm-project//llvm:Support",
        "@llvm-project//mlir:ArithDialect",
        "@llvm-project//mlir:FuncDialect",
        "@llvm-project//mlir:IR",
        "@llvm-project//mlir:SideEffectInterfaces",
        "@llvm-project//mlir:Support",
        "@llvm-project//mlir:TransformUtils",
        "@llvm-project//mlir:TranslateLib",
    ],
)

iree_compiler_cc_library(
    name = "IOStreamDialect",
    srcs = ["IOStreamDialect.cpp"],
    hdrs = ["IOStreamDialect.h"],
    deps = [
        ":IR",
        "//compiler/src/iree/compiler/Dialect/Util/IR",
        "//compiler/src/iree/compiler/Dialect/VM/Conversion",
        "//compiler/src/iree/compiler/Modules/IO/Stream:io_stream_imports",
        "//compiler/src/iree/compiler/Modules/IO/Stream/Conversion/StreamToVM",
        "@llvm-project//llvm:Support",
        "@llvm-project//mlir:FuncDialect",
        "@llvm-project//mlir:IR",
        "@llvm-project//mlir:Parser",
        "@llvm-project//mlir:Support",
        "@llvm-project//mlir:TransformUtils",
    ],
)

iree_gentbl_cc_library(
    name = "IOStreamOpsGen",
    tbl_outs = [
        (
            ["--gen-op-decls"],
            "IOStreamOps.h.inc",
        ),
        (
            ["--gen-op-defs"],
            "IOStreamOps.cpp.inc",
        ),
    ],
    tblgen = "@llvm-project//mlir:mlir-tblgen",
    td_file = "IOStreamOps.td",
    deps = [":td_files"],
)

iree_gentbl_cc_library(
    name = "IOStreamTypesGen",
    tbl_outs = [
        (
            [
                "--gen-typedef-decls",
                "--typedefs-dialect=io_stream",
            ],
            "IOStreamTypes.h.inc",
        ),
        (
            [
                "--gen-typedef-defs",
                "--typedefs-dialect=io_stream",
            ],
            "IOStreamTypes.cpp.inc",
        ),
    ],
    tblgen = "@llvm-project//mlir:mlir-tblgen",
    td_file = "IOStreamBase.td",
    deps = [":td_files"],
)

iree_tablegen_doc(
    name = "IOStreamDialectDocGen",
    tbl_outs = [
        (
            [
                "--dialect=io_stream",
                "--gen-dialect-doc",
            ],
            "IOStreamDialect.md",
        ),
    ],
    tblgen = "@llvm-project//mlir:mlir-tblgen",
    td_file = "IOStreamOps.td",
    deps = [":td_files"],
)
